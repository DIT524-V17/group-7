This log starts on the 23rd of March towards the end of sprint 3.
What was done before and not logged: 

Researched wifi connectivity. (none working methods) (wow that was a wasted sprint)
Read up on TCP. (Working method) 
Learned python: basics, sockets, threads, objects. (used for TCP server-client)
Wrote a Java TCP client for the android application.
Worked on integration for the car with Sebastian.
Total hours up to this point: 60 hours. (sprint 1,2 half of 3)

Proper log and documentation starts here:

Thursday 23-03: 8 hours
Title: Integration 
Configuring the old Raspberry Pi 1. issues connecting, so we are using the 3 instead.
Working on TCP connection.
Solving artifacts. They only appear on packets smaller than 5 characters. Or bigger than 5.
Started with mounting components on the car.
Theorizing a technique for automating the rasberry pi so we wont have to use it.
Researching shell scripts for rasberry pi.
Working on radar design and solution.
Drew 3 different designs to be discussed on the following meeting.


Friday 24-03: 5 hours
Title: Integration and Shell
Researching Shell scrips for executing commands autounomously later on.
Mounting components on the car. Includes soldering and taping.
Research crontab.

Saturday 25-03: 1 hour
Title: Linux
Learning Shell syntax and Linux.
Starting to not hate it.


- Sprint 4 -


Monday 27-03: 8 hours
Title: Artifacts thy be gone
Figure out why artifacts appear on anything other than packages with 5 length. (See common.py)
Improved the TCP connection, both on the python server and the client side.
Setup git branch for work logs.
Enabled TCP connection to send and receive data both ways.
Wrote a shell script for automatically pulling the repository and executing the server script on boot.
Integrating with Sebastian and Tim to get the raspberry working fine.
Current Issue with the shell script: Boots on launch, But crashes instantly.

Tuesday 28-03: 5 hours
Title: Demoable product
Worked on improving shell script.
Improved TCP client.
TCP server now auto reconnects.
Current issue: Script does not work on boot. Requires a 'restart' service command.
Rewrote a lot of the common.py server script. Added better error detection.
Make it possible for the TCP to send information to the client.


Wednesday 29-03: 3 hours 
Title: Documentation
Improved TCP.
Shell script can now fetch and pull the latest files from git on boot.
Researching linux runlevel and making the service wait before the internet connection.


Pi commands if I forget:

sudo service pontus_boot.sh status/restart/start/stop
	-Interacts with the scripts run time.

sudo nano /etc/systemd/system/pontus_boot.service
	-Opens the GNU for editing the service.

sudo fuser -k 9005/tcp 
	-Resets the port so it wont be in use.

sudo systemctl daemon-reload
	-Restarts all the daemon services.


Friday 31-03: 2 hours
Title: Thy shall be automated
Added shell script to git.



Monday 03-04: 5 hours
Title: Done
The Raspberry pi has been fully automated. 
The shell script will now work without manual controls.

Tuesday 04-04: 1 hour
Title: I made a booboo
Researched additional information about TCP and realized I suck at everything.

Wednesday 05-04: 2 hours
Title: I'm stupid
Not enough research led to a an issue that should've been a none-issue.
Spent half an hour rewriting the entire TCP on both sides because of my stupid mistakes.
Testing new TCP connection.

Thursday 06-04: 5 hours
Title: Modelling
Improved TCP to handle outputs. / Attempted to.
To decide. What do we want to send, Camera or just information for the demo.
Testing.
Make a user story for GUI component for collision control and started working on it.
Nearly finished with the GUI task, needs about 2 more hours then done.
Pair programming with Isabelle

Friday 07-04: 10 hours
Title: TCP
Figure out why TCP doesn't do two ways. socket.recv() blocks the flow.
Another issue was that readline would be blocking until it would receive a newline character like \n.
git objects ended up corrupted..
Two way connection is now working, Reconnection has stopped working.


------ Sprint 5 

Saturday 08-04: 11 hours
Helped integrating joystick.
Completed my GUI task.
Helped with collision control.
Two way connection is being integrated.
Pair programmed with Sebastian and Tim to test the car for the demo.


Monday 11-04:







